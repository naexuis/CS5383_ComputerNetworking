# automatically generated by the FlatBuffers compiler, do not modify

# namespace: CustomAppProto

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ReplyMessage(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ReplyMessage()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsReplyMessage(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # ReplyMessage
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ReplyMessage
    def SeqNo(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # ReplyMessage
    def Ts(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # ReplyMessage
    def ReplyRequest(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # ReplyMessage
    def ReplyStatus(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

def ReplyMessageStart(builder):
    builder.StartObject(4)

def Start(builder):
    ReplyMessageStart(builder)

def ReplyMessageAddSeqNo(builder, seqNo):
    builder.PrependUint32Slot(0, seqNo, 0)

def AddSeqNo(builder, seqNo):
    ReplyMessageAddSeqNo(builder, seqNo)

def ReplyMessageAddTs(builder, ts):
    builder.PrependFloat64Slot(1, ts, 0.0)

def AddTs(builder, ts):
    ReplyMessageAddTs(builder, ts)

def ReplyMessageAddReplyRequest(builder, replyRequest):
    builder.PrependInt8Slot(2, replyRequest, 0)

def AddReplyRequest(builder, replyRequest):
    ReplyMessageAddReplyRequest(builder, replyRequest)

def ReplyMessageAddReplyStatus(builder, replyStatus):
    builder.PrependInt8Slot(3, replyStatus, 0)

def AddReplyStatus(builder, replyStatus):
    ReplyMessageAddReplyStatus(builder, replyStatus)

def ReplyMessageEnd(builder):
    return builder.EndObject()

def End(builder):
    return ReplyMessageEnd(builder)
